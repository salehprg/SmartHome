<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.2"/>
    <PackageReference Include="Iot.Device.Bindings" Version="1.4.0"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.7">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="MySql.EntityFrameworkCore" Version="5.0.3.1"/>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.4"/>
    <PackageReference Include="System.IO.Ports" Version="5.0.1"/>
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="5.0.7"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="5.0.7"/>
    <PackageReference Include="Quartz" Version="3.3.2"/>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.2"/>
    <PackageReference Include="Quartz.Extensions.Hosting" Version="3.3.2"/>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1"/>
    <PackageReference Include="RtspClientSharp" Version="1.3.3"/>
    <PackageReference Include="QRCoder" Version="1.4.1"/>
    <PackageReference Include="Microsoft.AspNetCore.HttpOverrides" Version="2.2.0"/>
    <PackageReference Include="Tmds.DBus" Version="*"/>
  </ItemGroup>
  <ItemGroup>
    <None Update="baseyml.yml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="_WiFi.conf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Remove="$(SpaRoot)**"/>
    <None Remove="$(SpaRoot)**"/>
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
    </Exec>
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build"/>
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**"/>
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'"/>
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>