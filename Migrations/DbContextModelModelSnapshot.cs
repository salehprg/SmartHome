// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using smarthome.Model;

namespace webAPI.Migrations
{
    [DbContext(typeof(DbContextModel))]
    partial class DbContextModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("smarthome.Model.Home", b =>
                {
                    b.Property<int>("HomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("HomeId");

                    b.ToTable("Homes");

                    b.HasData(
                        new
                        {
                            HomeId = 1
                        });
                });

            modelBuilder.Entity("smarthome.Model.Modules.Devices.BaseDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("deviceType")
                        .HasColumnType("int");

                    b.Property<int>("moduleParentId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("registerid")
                        .HasColumnType("int");

                    b.Property<string>("serialNumber")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("moduleParentId");

                    b.ToTable("devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "لامپ کم مصرف",
                            registerid = 1,
                            serialNumber = "01 123144",
                            status = "false"
                        },
                        new
                        {
                            Id = 2,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "مهتابی",
                            registerid = 2,
                            serialNumber = "01 663525",
                            status = "false"
                        },
                        new
                        {
                            Id = 3,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "2مهتابی",
                            registerid = 3,
                            serialNumber = "01 767648",
                            status = "false"
                        },
                        new
                        {
                            Id = 4,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "3مهتابی",
                            registerid = 4,
                            serialNumber = "01 134214",
                            status = "false"
                        },
                        new
                        {
                            Id = 5,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "4مهتابی",
                            registerid = 5,
                            serialNumber = "01 534634",
                            status = "false"
                        },
                        new
                        {
                            Id = 6,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "5مهتابی",
                            registerid = 6,
                            serialNumber = "01 346213",
                            status = "false"
                        },
                        new
                        {
                            Id = 7,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "6مهتابی",
                            registerid = 7,
                            serialNumber = "01 258754",
                            status = "false"
                        },
                        new
                        {
                            Id = 8,
                            RoomId = 2,
                            deviceType = 1,
                            moduleParentId = 1,
                            name = "7مهتابی",
                            registerid = 8,
                            serialNumber = "01 245234",
                            status = "false"
                        },
                        new
                        {
                            Id = 9,
                            RoomId = 2,
                            deviceType = 2,
                            moduleParentId = 1,
                            name = "پرده",
                            registerid = 9,
                            serialNumber = "02 315661",
                            status = "50"
                        },
                        new
                        {
                            Id = 10,
                            RoomId = 2,
                            deviceType = 3,
                            moduleParentId = 1,
                            name = "پنجره",
                            registerid = 10,
                            serialNumber = "03 632647",
                            status = "true"
                        },
                        new
                        {
                            Id = 11,
                            RoomId = 2,
                            deviceType = 3,
                            moduleParentId = 1,
                            name = "در",
                            registerid = 11,
                            serialNumber = "03 732577",
                            status = "false"
                        },
                        new
                        {
                            Id = 12,
                            RoomId = 3,
                            deviceType = 4,
                            moduleParentId = 2,
                            name = "کامپیوتر",
                            registerid = 1,
                            status = "true"
                        },
                        new
                        {
                            Id = 13,
                            RoomId = 4,
                            deviceType = 4,
                            moduleParentId = 2,
                            name = "تلویزیون",
                            registerid = 2,
                            status = "true"
                        });
                });

            modelBuilder.Entity("smarthome.Model.Modules.Devices.CameraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cameraName")
                        .HasColumnType("text");

                    b.Property<string>("ip")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CameraModels");
                });

            modelBuilder.Entity("smarthome.Model.Modules.Devices.SmartplugInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("baseDeviceId")
                        .HasColumnType("int");

                    b.Property<float>("current")
                        .HasColumnType("float");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime");

                    b.Property<float>("voltage")
                        .HasColumnType("float");

                    b.Property<float>("watt")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("baseDeviceId");

                    b.ToTable("SmartplugInfoModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            baseDeviceId = 12,
                            current = 5f,
                            time = new DateTime(2021, 9, 7, 11, 51, 44, 281, DateTimeKind.Local).AddTicks(5136),
                            voltage = 209f,
                            watt = 1045f
                        },
                        new
                        {
                            Id = 2,
                            baseDeviceId = 12,
                            current = 6.3f,
                            time = new DateTime(2021, 9, 7, 11, 51, 44, 289, DateTimeKind.Local).AddTicks(3738),
                            voltage = 208.8f,
                            watt = 1315.44f
                        },
                        new
                        {
                            Id = 3,
                            baseDeviceId = 13,
                            current = 4.4f,
                            time = new DateTime(2021, 9, 7, 11, 51, 44, 289, DateTimeKind.Local).AddTicks(3882),
                            voltage = 208.5f,
                            watt = 917.4f
                        },
                        new
                        {
                            Id = 4,
                            baseDeviceId = 13,
                            current = 5.7f,
                            time = new DateTime(2021, 9, 7, 11, 51, 44, 289, DateTimeKind.Local).AddTicks(3936),
                            voltage = 210.2f,
                            watt = 1198.14f
                        });
                });

            modelBuilder.Entity("smarthome.Model.Modules.MainModule.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("moduleType")
                        .HasColumnType("int");

                    b.Property<string>("serialNumber")
                        .HasColumnType("text");

                    b.Property<int>("slave_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            moduleType = 0,
                            serialNumber = "01 01 123698 0000",
                            slave_id = 1
                        },
                        new
                        {
                            Id = 2,
                            moduleType = 1,
                            serialNumber = "02 02 767892 0000",
                            slave_id = 2
                        });
                });

            modelBuilder.Entity("smarthome.Model.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<float>("X")
                        .HasColumnType("float");

                    b.Property<float>("Y")
                        .HasColumnType("float");

                    b.Property<string>("area")
                        .HasColumnType("text");

                    b.Property<string>("border")
                        .HasColumnType("text");

                    b.Property<string>("roomName")
                        .HasColumnType("text");

                    b.HasKey("RoomId");

                    b.HasIndex("HomeId");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 2,
                            HomeId = 1,
                            X = 142f,
                            Y = 240.8f,
                            area = "M68.18,130V359.9A6.09,6.09,0,0,0,74.27,366h136a6.09,6.09,0,0,0,6.09-6.09V160H186.21V130Z",
                            border = "M96,130H68.18V359.9A6.09,6.09,0,0,0,74.27,366h136a6.09,6.09,0,0,0,6.09-6.09V225 M152.71,130H186.21V160H218.5",
                            roomName = "آشپزخانه"
                        },
                        new
                        {
                            RoomId = 3,
                            HomeId = 1,
                            X = 106f,
                            Y = 66f,
                            area = "M152.71,130h63.66V8.09A6.09,6.09,0,0,0,210.27,2H8.09A6.09,6.09,0,0,0,2,8.09V123.95A6.09,6.09,0,0,0,8.09,130H96Z",
                            border = "M152.71,130h63.66V8.09A6.09,6.09,0,0,0,210.27,2H8.09A6.09,6.09,0,0,0,2,8.09V123.95A6.09,6.09,0,0,0,8.09,130H96",
                            roomName = "اتاق خواب"
                        },
                        new
                        {
                            RoomId = 4,
                            HomeId = 1,
                            X = 468f,
                            Y = 134f,
                            area = "M358.8,160V49.82a6.09,6.09,0,0,1,6.09-6.09H570.78a6.09,6.09,0,0,1,6.09,6.09V218.9a6.09,6.09,0,0,1-6.09,6.09h-212Z",
                            border = "M358.8,160V49.82a6.09,6.09,0,0,1,6.09-6.09H570.78a6.09,6.09,0,0,1,6.09,6.09V218.9a6.09,6.09,0,0,1-6.09,6.09h-212",
                            roomName = "پذیرایی"
                        },
                        new
                        {
                            RoomId = 5,
                            HomeId = 1,
                            X = 320f,
                            Y = 273f,
                            area = "M216.37,354V92.5H358.8V225H424.39V319H272.71V354Z",
                            border = "M216.37,225V356 M216.21,162V92.5H358.8V160 M358.8,225H424.39V312.91a6.09,6.09,0,0,1,-6.09,6.09H272.71V356",
                            roomName = "هال"
                        });
                });

            modelBuilder.Entity("smarthome.Model.Scenario", b =>
                {
                    b.Property<int>("ScenarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ScenarioName")
                        .HasColumnType("text");

                    b.Property<string>("cronjob")
                        .HasColumnType("text");

                    b.Property<bool>("running")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ScenarioId");

                    b.ToTable("Scenarios");

                    b.HasData(
                        new
                        {
                            ScenarioId = 1,
                            ScenarioName = "FlipFlop",
                            cronjob = "0/15 * * ? * * *",
                            running = false
                        });
                });

            modelBuilder.Entity("smarthome.Model.ScenarioAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("int");

                    b.Property<double>("delay")
                        .HasColumnType("double");

                    b.Property<int>("deviceId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("deviceId");

                    b.ToTable("ScenarioActions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ScenarioId = 1,
                            delay = 5.0,
                            deviceId = 2,
                            status = "true"
                        },
                        new
                        {
                            Id = 2,
                            ScenarioId = 1,
                            delay = 10.0,
                            deviceId = 4,
                            status = "true"
                        },
                        new
                        {
                            Id = 3,
                            ScenarioId = 1,
                            delay = 5.0,
                            deviceId = 2,
                            status = "false"
                        },
                        new
                        {
                            Id = 4,
                            ScenarioId = 1,
                            delay = 10.0,
                            deviceId = 4,
                            status = "false"
                        });
                });

            modelBuilder.Entity("smarthome.Model.StrokeArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<string>("stroke")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.ToTable("StrokeAreas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HomeId = 1,
                            stroke = "M562.71,225V354h-290V319H418.37a6.09,6.09,0,0,0,6.09-6.09V225Z"
                        },
                        new
                        {
                            Id = 2,
                            HomeId = 1,
                            stroke = "M8.09,130V347.91A6.09,6.09,0,0,0,14.18,354h54V130Z"
                        },
                        new
                        {
                            Id = 3,
                            HomeId = 1,
                            stroke = "M216.37,49.82H358.8V92.5H216.37Z"
                        });
                });

            modelBuilder.Entity("smarthome.Model.Modules.Devices.BaseDevice", b =>
                {
                    b.HasOne("smarthome.Model.Room", null)
                        .WithMany("roomDevices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("smarthome.Model.Modules.MainModule.Module", "moduleParent")
                        .WithMany()
                        .HasForeignKey("moduleParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("moduleParent");
                });

            modelBuilder.Entity("smarthome.Model.Modules.Devices.SmartplugInfoModel", b =>
                {
                    b.HasOne("smarthome.Model.Modules.Devices.BaseDevice", "baseDevice")
                        .WithMany()
                        .HasForeignKey("baseDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("baseDevice");
                });

            modelBuilder.Entity("smarthome.Model.Room", b =>
                {
                    b.HasOne("smarthome.Model.Home", null)
                        .WithMany("rooms")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("smarthome.Model.ScenarioAction", b =>
                {
                    b.HasOne("smarthome.Model.Scenario", null)
                        .WithMany("actions")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("smarthome.Model.Modules.Devices.BaseDevice", "device")
                        .WithMany()
                        .HasForeignKey("deviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("device");
                });

            modelBuilder.Entity("smarthome.Model.StrokeArea", b =>
                {
                    b.HasOne("smarthome.Model.Home", null)
                        .WithMany("strokedAreas")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("smarthome.Model.Home", b =>
                {
                    b.Navigation("rooms");

                    b.Navigation("strokedAreas");
                });

            modelBuilder.Entity("smarthome.Model.Room", b =>
                {
                    b.Navigation("roomDevices");
                });

            modelBuilder.Entity("smarthome.Model.Scenario", b =>
                {
                    b.Navigation("actions");
                });
#pragma warning restore 612, 618
        }
    }
}
